제네릭과 컬렉션
제네릭
	- 제네릭 프로그래밍
		- 다양한 종류의 데이터를 처리할 수 있는 클래스와 메소드를 작성하는 기법
		
기존의 방법 - 일반적인 객체를 처리하려면 Object참조 변수 사용, Object는 어떤 객체이던지 참조 가능

class 클래스이름 <T>{ } / T는 Type을 뜻함

다중타입 매개변수
	class 클래스이름 <K,V>{ }

제네릭 메소드
	- 일반클래스의 메소드에서도 타입매개변수를 사용하여 제네릭 메소드로 정의 가능
	- 타입매개변수의 범위가 메소드 내부로 제한
	
컬렉션
	- 자바에서 자료구조를 구현한 클래스
	- 자료구조 : 리스트(list), 스택(stack), 큐(queue), 집합(set), 해쉬테이블(hash table) 등
	
	컬렉션 인터페이스,컬렉션 클래스
		- 자바는 컬렉션 인터페이스와 컬렉션 클래스로 나눔
	
	리스트 인터페이스
		- 순서를 가지는 요소들의 모임, 중복된 요소를 가질 수 있음
	ArrayList
		- 배열의 향상된 버전, 가변 크기의 배열
		
LinkedList
	- 빈번하게 삽입과 삭제가 일어나는 경우

Set
	- 집합(Set)은 원소의 중복을 허용하지 않는다.
	- 순서 없음
	
Map
	- 많은 데이터 중에서 원하는 데이터를 빠르게 찾을 수 있는 자료 구조
	- 사전과 같은 자료 구조
	
Collections 클래스
	- 여러 유용한 아록리즘을 구현한 메소드들을 제공
	- 정렬(Sort)
		- 데이터를 어떤 기준에 의하여 순서대로 나열하는 것
	
	- 섞기(Shuffling)
		- 정렬의 반대 동작
		- 리스트에 존재하는 정렬을 파괴하여서 원소의 순서를 랜덤하게 만든다.
		
	- 탐색(Searching)
		- 리스트 안에서 원하는 원소를 찾는 것