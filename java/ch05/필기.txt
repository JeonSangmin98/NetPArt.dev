클래스,객체,메소드

객체지향 : 실제 세계를 모델링 하여 소프트웨어를 개발하는 방법

객체는 상태(속성)와 동작을 가짐

상태는 필드로 동작은 메소드로 구현

3대 특징
	- 캡슐 : 관련 데이터와 알고리즘이 하나의 묶음으로 정리
		- 사용하기 쉽게 하기 위해 캡슐화 함
		- 정보은닉, 실제 구현 내용을 외부에 감춤
	- 상속 : 이미 작성된 클래스를 이어받아 새로운 클래스 생성,
		기존 코드 재활
	- 다형성 : 하나의 방법으로 많은 상황 대처

추상화
	- 필요한 것만 남겨 놓음

장점
	- 신뢰성있는 소프트웨어
	- 재사용 쉬움
	- 업그레이드,디버깅 쉬움

클래스
	- 객체를 만드는 설계도
	- 각각의 객체를 그 클래스의 인스턴스라 함

변수 종류
	- 기초 변수 : 실제 데이터값
	- 참조 변수 : 객체 참조 변수, 객체의 참조값이 저장

메소드
	- 입력을 받아 처리를 하고 결과를 반환하는 가상적인 상자와 같다	
	
메소드 종료
	- return 사용
	- return 반환값;

인수와 매개변수
	- 인수 : 메소드 호출 시 전달하는 값

메소드 오버로딩
	- 같은 이름의 메소드가 여러개 존재할 수 있다 이것을 메소드 오버로딩이라 함

String 클래스
	- 문자열은 기초 자료형이 아님
	- 문자열을 저장하고 처리하는 클래스
	- String s = new String("Hello World");
	- new String() 생략 가능
	- 자바에서 문자열은 객체임